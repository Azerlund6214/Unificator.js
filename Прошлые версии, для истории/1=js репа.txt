

сбросить туда:

мои методы-аналоги пхп

писать методы:
elementor_...

все про работу с элементами.  без жкури



e_getFullInfo( e )
вернет асоц массив со всей инфой.   тег классы ид, хтмл , иннер, текст и тд.     и поле SUCCESS - все ли норм.
    можно обернуть тупо в трайкатч    в начале проверка на undefined


// Проверки типов
isUndef()   и внутри проверки
isElement()
isJson()
isObject()
isArrayOne
isArrayTwo
isArrayAsoc


makeReload(waitMs=0)
makeRedirect(url,waitMs=0)
makeCloseTab(waitMs=0)

formSend_byId()
formSend_byElement(e)
formGetInfo(e)    вытащит все в асоц массив.   аналог метода из елементора.



page_getAllFormsElems()   найдет и вернет массив с elem всех форм
page_getFullPageHtml()
page_getFullPageText()
pageJoke_destroyCss()
page_getFaviconUrls()   (вернет массив ссылок)

elem_textAdd(e, text)   прибавить к тексту
elem_textReplace(e, newText)   заменить на новый
elem_textGet(e)
elem_delete(e)
elem_htmlReplace(e, newHtml)
elem_htmlGet(e)

// Работа с конкретной формой
elemForm_fillOneInput(e,    inputName или id, думать    , text)
elemForm_addOneInput(e, type, name, )
elemForm_replaceUrlTarget(e, newTargetUrl)


elem_GetSubElementBy...    брать из скипта вк



log(что)     либо logAny(что) если занято
logAlert()
logEmpty(count=1)   пустая строка   без "", а прям пустая(в идеале)    либо строка с переносами
logText00000   цветастые и тд.  разные методы, много
logCustom(target, fontSize=00, color=black, ...)

logLine(symb='#', len=30, emptyOffsets=1);   найти аналог.   либо просто  -------- или ====== или #####
console.log('\n\n====================\n');     юзать php_strpad для \n.    а первый дополнительный добавлять ели офсет 1+





файл будет лежать в корне паблика.  Всегда подключается.  добавить в шаблон
репа под все это

Unificator.js

!!!! Сделать главы из комментов, как в веб пхп    заголовки



нач файла
// #########################################
// #### Новизна: Не изменялся | (000023) ###
// #########################################

Концепт:
- Много маленьких методов для удобной работы. В том числе и самые простейшие.
- Цель - создание астракций, что бы работать с этими удобными методами, а не вспоминать постоянно как что пишется на js
- Скрипт можно копировать целиком в консоль.

Правила:
- Деление групп методов на главы.
- Все методы многострочные. Без ужатий в 1 строку.
- Между методоми пустая строка.
- У каждого метода коментарий в 1 строку.
- Аргумент с элементом называется 'e'
- Только нативный JS, без JQuery.
- Методы могут использовать друг друга.
- Без защит от дурака.
- Файл используется(объявляется) только целиком, а не отдельные методы. (Тк они могут быть завязаны друг на друга)
- Подключается либо через тег(в проектах), либо вставкой целиком в консоль.
- Замыкания нежелательны.
- Если в аргументах только елемент, то вокруг стасятся пробелы ---> func123( e )
- Все фигурные скобки с новой строки. (Не оставлять первую наверху, бесит)
- Концепт спонтанно придуман 100123. И сразу описано 20-30шт будущих методов. Почти 3500 символов текста, 130 строк.
- Всегда пишу URL вместо URI
- Наиболее универсальные и простые(самые законченые и безпроблемные) группы методов - ближе к вверху файла.
- В конце файла стоит комментарий-заглушка --> // End
- Кодировка = UTF-8 без BOM




// End
123